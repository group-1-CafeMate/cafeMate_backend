name: Backend CI/CD Pipeline

on:
    push:
      branches:
        - main  # 當推送到 main 分支時觸發
    pull_request:
      branches:
        - main  # 當 PR 合併到 main 時觸發
  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1. 檢查代碼
    - name: Check out code
      uses: actions/checkout@v3

    # 2. 設置 Python 環境
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.15

    # 3. 安裝依賴
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    # 4. 安裝 Docker 和 Docker Compose
    - name: Install Docker and Docker Compose
      run: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo apt-get install -y docker-compose

    # 5. 運行測試
    - name: Run Tests
      env:
        MYSQL_NAME: test_db
        MYSQL_USER: root
        MYSQL_PASSWORD: root
        MYSQL_HOST: 127.0.0.1
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: 'True'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EMAIL_HOST_USER: cafemategroup1@gmail.com
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        GSERVICE_SITE_URL: http://localhost:8000
      run: python backend/manage.py test

    # 6. 登錄 Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME_YC }}
        password: ${{ secrets.DOCKER_PASSWORD_YC }}

    # 7. 構建 Docker 映像並推送至 Docker Hub
    - name: Build and Push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

  # 8. 部署至 EC2
  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    # 使用 SSH 登入 EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
            # 停止並移除舊的容器
            docker-compose -f docker-compose.yml down || true
            # 拉取最新的 Docker 映像
            docker-compose -f docker-compose.yml pull
            # 啟動新的服務容器
            docker-compose -f docker-compose.yml up -d
